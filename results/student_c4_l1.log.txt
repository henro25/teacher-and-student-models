Distilling Teacher Knowledge into a Single Student:
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Distill Loss: 3.6433, Accuracy: 0.4180
Distill Loss: 2.6662, Accuracy: 0.5362
Distill Loss: 2.2165, Accuracy: 0.5898
Distill Loss: 1.9539, Accuracy: 0.6215
Distill Loss: 1.8171, Accuracy: 0.6388
Distill Loss: 1.7055, Accuracy: 0.6575
Distill Loss: 1.6062, Accuracy: 0.6701
Distill Loss: 1.5306, Accuracy: 0.6801
Distill Loss: 1.4840, Accuracy: 0.6907
Distill Loss: 1.4204, Accuracy: 0.6956
Distill Loss: 1.3751, Accuracy: 0.7000
Distill Loss: 1.3364, Accuracy: 0.7061
Distill Loss: 1.3113, Accuracy: 0.7098
Distill Loss: 1.2838, Accuracy: 0.7176
Distill Loss: 1.2475, Accuracy: 0.7209
Distill Loss: 1.2206, Accuracy: 0.7238
Distill Loss: 1.2111, Accuracy: 0.7253
Distill Loss: 1.1869, Accuracy: 0.7260
Distill Loss: 1.1698, Accuracy: 0.7317
Distill Loss: 1.1499, Accuracy: 0.7352
Single Student saved to student_c4_l1.pth

Evaluating the Single Student:
WARNING:fvcore.nn.jit_analysis:Unsupported operator aten::max_pool2d encountered 2 time(s)
Single Student Results:
Loss: 0.7573, Accuracy: 0.7593
Latency per Image: 0.002873 secs
FLOPs per Image: 1.30 MFLOPs

Duplicating the Single Student:
3 Students initialized by duplicating the Single Student model.

Joint Training of Mixture of Experts (MoE):
<ipython-input-3-8a778de45ff1>:753: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  student.load_state_dict(torch.load(single_student_save_path))
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Epoch 1/20 - MoE Loss: 0.7798, Accuracy: 0.7327
Epoch 2/20 - MoE Loss: 0.7513, Accuracy: 0.7406
Epoch 3/20 - MoE Loss: 0.7324, Accuracy: 0.7468
Epoch 4/20 - MoE Loss: 0.7170, Accuracy: 0.7535
Epoch 5/20 - MoE Loss: 0.6994, Accuracy: 0.7597
Epoch 6/20 - MoE Loss: 0.6877, Accuracy: 0.7609
Epoch 7/20 - MoE Loss: 0.6695, Accuracy: 0.7698
Epoch 8/20 - MoE Loss: 0.6523, Accuracy: 0.7743
Epoch 9/20 - MoE Loss: 0.6356, Accuracy: 0.7785
Epoch 10/20 - MoE Loss: 0.6178, Accuracy: 0.7876
Epoch 11/20 - MoE Loss: 0.5989, Accuracy: 0.7912
Epoch 12/20 - MoE Loss: 0.5809, Accuracy: 0.7966
Epoch 13/20 - MoE Loss: 0.5656, Accuracy: 0.8014
Epoch 14/20 - MoE Loss: 0.5489, Accuracy: 0.8093
Epoch 15/20 - MoE Loss: 0.5365, Accuracy: 0.8148
Epoch 16/20 - MoE Loss: 0.5241, Accuracy: 0.8172
Epoch 17/20 - MoE Loss: 0.5110, Accuracy: 0.8207
Epoch 18/20 - MoE Loss: 0.5019, Accuracy: 0.8237
Epoch 19/20 - MoE Loss: 0.4982, Accuracy: 0.8269
Epoch 20/20 - MoE Loss: 0.4944, Accuracy: 0.8268

Evaluating Mixture of Experts (MoE):
WARNING:fvcore.nn.jit_analysis:Unsupported operator aten::max_pool2d encountered 2 time(s)
WARNING:fvcore.nn.jit_analysis:The following submodules of the model were never called during the trace of the graph. They may be unused, or they were accessed by direct calls to .forward() or via other python methods. In the latter case they will have zeros for statistics, though their statistics will still contribute to their parent calling module.
gating_net, gating_net.conv_layers, gating_net.conv_layers.0, gating_net.conv_layers.1, gating_net.conv_layers.2, gating_net.conv_layers.3, gating_net.conv_layers.4, gating_net.conv_layers.5, gating_net.conv_layers.6, gating_net.conv_layers.7, gating_net.fc_layers, gating_net.fc_layers.0, gating_net.fc_layers.1, gating_net.fc_layers.2, gating_net.fc_layers.3, gating_net.fc_layers.4, students.1, students.1.network, students.1.network.0, students.1.network.1, students.1.network.2, students.1.network.3, students.1.network.4, students.1.network.5, students.1.network.6, students.1.network.7, students.1.network.8, students.1.network.9, students.2, students.2.network, students.2.network.0, students.2.network.1, students.2.network.2, students.2.network.3, students.2.network.4, students.2.network.5, students.2.network.6, students.2.network.7, students.2.network.8, students.2.network.9
MoE Results:
Loss: 0.5644, Accuracy: 0.8131
Latency per Image: 0.002059 secs
FLOPs per Image: 1.30 MFLOPs