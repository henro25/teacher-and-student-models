Distilling Teacher Knowledge into a Single Student:
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Distill Loss: 3.8945, Accuracy: 0.3921
Distill Loss: 3.0130, Accuracy: 0.4955
Distill Loss: 2.6291, Accuracy: 0.5403
Distill Loss: 2.4269, Accuracy: 0.5652
Distill Loss: 2.2672, Accuracy: 0.5848
Distill Loss: 2.1456, Accuracy: 0.6014
Distill Loss: 2.0483, Accuracy: 0.6151
Distill Loss: 1.9589, Accuracy: 0.6270
Distill Loss: 1.9083, Accuracy: 0.6345
Distill Loss: 1.8558, Accuracy: 0.6414
Distill Loss: 1.8013, Accuracy: 0.6495
Distill Loss: 1.7487, Accuracy: 0.6554
Distill Loss: 1.7176, Accuracy: 0.6595
Distill Loss: 1.6709, Accuracy: 0.6658
Distill Loss: 1.6490, Accuracy: 0.6721
Distill Loss: 1.6078, Accuracy: 0.6740
Distill Loss: 1.5826, Accuracy: 0.6768
Distill Loss: 1.5600, Accuracy: 0.6803
Distill Loss: 1.5425, Accuracy: 0.6830
Distill Loss: 1.5234, Accuracy: 0.6845
Single Student saved to student_c2_l0.5.pth

Evaluating the Single Student:
WARNING:fvcore.nn.jit_analysis:Unsupported operator aten::max_pool2d encountered 2 time(s)
Single Student Results:
Loss: 0.8650, Accuracy: 0.7181
Latency per Image: 0.002246 secs
FLOPs per Image: 0.01 MFLOPs

Duplicating the Single Student:
3 Students initialized by duplicating the Single Student model.

Joint Training of Mixture of Experts (MoE):
<ipython-input-3-2b6d9b246aea>:753: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  student.load_state_dict(torch.load(single_student_save_path))
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Epoch 1/20 - MoE Loss: 0.8790, Accuracy: 0.6957
Epoch 2/20 - MoE Loss: 0.8475, Accuracy: 0.7048
Epoch 3/20 - MoE Loss: 0.8296, Accuracy: 0.7098
Epoch 4/20 - MoE Loss: 0.8145, Accuracy: 0.7139
Epoch 5/20 - MoE Loss: 0.7985, Accuracy: 0.7192
Epoch 6/20 - MoE Loss: 0.7869, Accuracy: 0.7239
Epoch 7/20 - MoE Loss: 0.7741, Accuracy: 0.7300
Epoch 8/20 - MoE Loss: 0.7584, Accuracy: 0.7341
Epoch 9/20 - MoE Loss: 0.7433, Accuracy: 0.7384
Epoch 10/20 - MoE Loss: 0.7338, Accuracy: 0.7418
Epoch 11/20 - MoE Loss: 0.7193, Accuracy: 0.7481
Epoch 12/20 - MoE Loss: 0.6993, Accuracy: 0.7547
Epoch 13/20 - MoE Loss: 0.6920, Accuracy: 0.7579
Epoch 14/20 - MoE Loss: 0.6803, Accuracy: 0.7607
Epoch 15/20 - MoE Loss: 0.6671, Accuracy: 0.7673
Epoch 16/20 - MoE Loss: 0.6606, Accuracy: 0.7670
Epoch 17/20 - MoE Loss: 0.6444, Accuracy: 0.7728
Epoch 18/20 - MoE Loss: 0.6442, Accuracy: 0.7730
Epoch 19/20 - MoE Loss: 0.6441, Accuracy: 0.7727
Epoch 20/20 - MoE Loss: 0.6430, Accuracy: 0.7743

Evaluating Mixture of Experts (MoE):
WARNING:fvcore.nn.jit_analysis:Unsupported operator aten::max_pool2d encountered 2 time(s)
WARNING:fvcore.nn.jit_analysis:The following submodules of the model were never called during the trace of the graph. They may be unused, or they were accessed by direct calls to .forward() or via other python methods. In the latter case they will have zeros for statistics, though their statistics will still contribute to their parent calling module.
gating_net, gating_net.conv_layers, gating_net.conv_layers.0, gating_net.conv_layers.1, gating_net.conv_layers.2, gating_net.conv_layers.3, gating_net.conv_layers.4, gating_net.conv_layers.5, gating_net.conv_layers.6, gating_net.conv_layers.7, gating_net.fc_layers, gating_net.fc_layers.0, gating_net.fc_layers.1, gating_net.fc_layers.2, gating_net.fc_layers.3, gating_net.fc_layers.4, students.1, students.1.network, students.1.network.0, students.1.network.1, students.1.network.2, students.1.network.3, students.1.network.4, students.1.network.5, students.1.network.6, students.1.network.7, students.1.network.8, students.1.network.9, students.2, students.2.network, students.2.network.0, students.2.network.1, students.2.network.2, students.2.network.3, students.2.network.4, students.2.network.5, students.2.network.6, students.2.network.7, students.2.network.8, students.2.network.9
MoE Results:
Loss: 0.6759, Accuracy: 0.7674
Latency per Image: 0.001040 secs
FLOPs per Image: 0.01 MFLOPs