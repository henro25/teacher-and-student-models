Distilling Teacher Knowledge into a Single Student:
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Distill Loss: 3.1706, Accuracy: 0.4833
Distill Loss: 1.9525, Accuracy: 0.6317
Distill Loss: 1.6014, Accuracy: 0.6805
Distill Loss: 1.3932, Accuracy: 0.7059
Distill Loss: 1.2532, Accuracy: 0.7279
Distill Loss: 1.1577, Accuracy: 0.7421
Distill Loss: 1.0667, Accuracy: 0.7530
Distill Loss: 1.0157, Accuracy: 0.7648
Distill Loss: 0.9675, Accuracy: 0.7738
Distill Loss: 0.9232, Accuracy: 0.7793
Distill Loss: 0.8870, Accuracy: 0.7832
Distill Loss: 0.8557, Accuracy: 0.7880
Distill Loss: 0.8278, Accuracy: 0.7966
Distill Loss: 0.8045, Accuracy: 0.8002
Distill Loss: 0.7845, Accuracy: 0.8047
Distill Loss: 0.7685, Accuracy: 0.8067
Distill Loss: 0.7489, Accuracy: 0.8116
Distill Loss: 0.7320, Accuracy: 0.8141
Distill Loss: 0.7274, Accuracy: 0.8166
Distill Loss: 0.7103, Accuracy: 0.8189
Single Student saved to student_c1_l32.pth

Evaluating the Single Student:
WARNING:fvcore.nn.jit_analysis:Unsupported operator aten::max_pool2d encountered 2 time(s)
Single Student Results:
Loss: 0.5960, Accuracy: 0.8026
Latency per Image: 0.002360 secs
FLOPs per Image: 0.61 MFLOPs

Duplicating the Single Student:
<ipython-input-3-376f37460a97>:753: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  student.load_state_dict(torch.load(single_student_save_path))
3 Students initialized by duplicating the Single Student model.

Joint Training of Mixture of Experts (MoE):
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Epoch 1/20 - MoE Loss: 0.5503, Accuracy: 0.8139
Epoch 2/20 - MoE Loss: 0.5213, Accuracy: 0.8229
Epoch 3/20 - MoE Loss: 0.4934, Accuracy: 0.8325
Epoch 4/20 - MoE Loss: 0.4668, Accuracy: 0.8406
Epoch 5/20 - MoE Loss: 0.4491, Accuracy: 0.8462
Epoch 6/20 - MoE Loss: 0.4251, Accuracy: 0.8546
Epoch 7/20 - MoE Loss: 0.4019, Accuracy: 0.8622
Epoch 8/20 - MoE Loss: 0.3741, Accuracy: 0.8727
Epoch 9/20 - MoE Loss: 0.3519, Accuracy: 0.8791
Epoch 10/20 - MoE Loss: 0.3213, Accuracy: 0.8912
Epoch 11/20 - MoE Loss: 0.3049, Accuracy: 0.8985
Epoch 12/20 - MoE Loss: 0.2766, Accuracy: 0.9076
Epoch 13/20 - MoE Loss: 0.2534, Accuracy: 0.9146
Epoch 14/20 - MoE Loss: 0.2367, Accuracy: 0.9209
Epoch 15/20 - MoE Loss: 0.2174, Accuracy: 0.9271
Epoch 16/20 - MoE Loss: 0.2009, Accuracy: 0.9322
Epoch 17/20 - MoE Loss: 0.1927, Accuracy: 0.9348
Epoch 18/20 - MoE Loss: 0.1806, Accuracy: 0.9396
Epoch 19/20 - MoE Loss: 0.1781, Accuracy: 0.9417
Epoch 20/20 - MoE Loss: 0.1760, Accuracy: 0.9423

Evaluating Mixture of Experts (MoE):
WARNING:fvcore.nn.jit_analysis:Unsupported operator aten::max_pool2d encountered 2 time(s)
WARNING:fvcore.nn.jit_analysis:The following submodules of the model were never called during the trace of the graph. They may be unused, or they were accessed by direct calls to .forward() or via other python methods. In the latter case they will have zeros for statistics, though their statistics will still contribute to their parent calling module.
gating_net, gating_net.conv_layers, gating_net.conv_layers.0, gating_net.conv_layers.1, gating_net.conv_layers.2, gating_net.conv_layers.3, gating_net.conv_layers.4, gating_net.conv_layers.5, gating_net.conv_layers.6, gating_net.conv_layers.7, gating_net.fc_layers, gating_net.fc_layers.0, gating_net.fc_layers.1, gating_net.fc_layers.2, gating_net.fc_layers.3, gating_net.fc_layers.4, students.1, students.1.network, students.1.network.0, students.1.network.1, students.1.network.2, students.1.network.3, students.1.network.4, students.1.network.5, students.1.network.6, students.1.network.7, students.1.network.8, students.1.network.9, students.2, students.2.network, students.2.network.0, students.2.network.1, students.2.network.2, students.2.network.3, students.2.network.4, students.2.network.5, students.2.network.6, students.2.network.7, students.2.network.8, students.2.network.9
MoE Results:
Loss: 0.5245, Accuracy: 0.8553
Latency per Image: 0.001363 secs
FLOPs per Image: 0.61 MFLOPs