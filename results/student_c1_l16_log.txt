Distilling Teacher Knowledge into a Single Student:
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Distill Loss: 3.2925, Accuracy: 0.4617
Distill Loss: 2.1188, Accuracy: 0.6062
Distill Loss: 1.7137, Accuracy: 0.6633
Distill Loss: 1.4783, Accuracy: 0.6956
Distill Loss: 1.3223, Accuracy: 0.7165
Distill Loss: 1.2201, Accuracy: 0.7335
Distill Loss: 1.1244, Accuracy: 0.7476
Distill Loss: 1.0694, Accuracy: 0.7556
Distill Loss: 1.0095, Accuracy: 0.7627
Distill Loss: 0.9654, Accuracy: 0.7714
Distill Loss: 0.9383, Accuracy: 0.7783
Distill Loss: 0.8966, Accuracy: 0.7846
Distill Loss: 0.8753, Accuracy: 0.7869
Distill Loss: 0.8538, Accuracy: 0.7921
Distill Loss: 0.8297, Accuracy: 0.7940
Distill Loss: 0.8140, Accuracy: 0.7966
Distill Loss: 0.7932, Accuracy: 0.8030
Distill Loss: 0.7800, Accuracy: 0.8047
Distill Loss: 0.7595, Accuracy: 0.8083
Distill Loss: 0.7482, Accuracy: 0.8100
Single Student saved to student_c1_l16.pth

Evaluating the Single Student:
WARNING:fvcore.nn.jit_analysis:Unsupported operator aten::max_pool2d encountered 2 time(s)
Single Student Results:
Loss: 0.6122, Accuracy: 0.7972
Latency per Image: 0.002235 secs
FLOPs per Image: 0.35 MFLOPs

Duplicating the Single Student:
<ipython-input-3-0669f19df7ff>:753: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  student.load_state_dict(torch.load(single_student_save_path))
3 Students initialized by duplicating the Single Student model.

Joint Training of Mixture of Experts (MoE):
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Epoch 1/20 - MoE Loss: 0.5729, Accuracy: 0.8050
Epoch 2/20 - MoE Loss: 0.5388, Accuracy: 0.8171
Epoch 3/20 - MoE Loss: 0.5100, Accuracy: 0.8259
Epoch 4/20 - MoE Loss: 0.4876, Accuracy: 0.8331
Epoch 5/20 - MoE Loss: 0.4685, Accuracy: 0.8391
Epoch 6/20 - MoE Loss: 0.4466, Accuracy: 0.8496
Epoch 7/20 - MoE Loss: 0.4191, Accuracy: 0.8575
Epoch 8/20 - MoE Loss: 0.3963, Accuracy: 0.8654
Epoch 9/20 - MoE Loss: 0.3680, Accuracy: 0.8751
Epoch 10/20 - MoE Loss: 0.3449, Accuracy: 0.8816
Epoch 11/20 - MoE Loss: 0.3286, Accuracy: 0.8883
Epoch 12/20 - MoE Loss: 0.3043, Accuracy: 0.8966
Epoch 13/20 - MoE Loss: 0.2753, Accuracy: 0.9067
Epoch 14/20 - MoE Loss: 0.2601, Accuracy: 0.9115
Epoch 15/20 - MoE Loss: 0.2422, Accuracy: 0.9178
Epoch 16/20 - MoE Loss: 0.2271, Accuracy: 0.9244
Epoch 17/20 - MoE Loss: 0.2116, Accuracy: 0.9298
Epoch 18/20 - MoE Loss: 0.2085, Accuracy: 0.9313
Epoch 19/20 - MoE Loss: 0.2012, Accuracy: 0.9325
Epoch 20/20 - MoE Loss: 0.1957, Accuracy: 0.9344

Evaluating Mixture of Experts (MoE):
WARNING:fvcore.nn.jit_analysis:Unsupported operator aten::max_pool2d encountered 2 time(s)
WARNING:fvcore.nn.jit_analysis:The following submodules of the model were never called during the trace of the graph. They may be unused, or they were accessed by direct calls to .forward() or via other python methods. In the latter case they will have zeros for statistics, though their statistics will still contribute to their parent calling module.
gating_net, gating_net.conv_layers, gating_net.conv_layers.0, gating_net.conv_layers.1, gating_net.conv_layers.2, gating_net.conv_layers.3, gating_net.conv_layers.4, gating_net.conv_layers.5, gating_net.conv_layers.6, gating_net.conv_layers.7, gating_net.fc_layers, gating_net.fc_layers.0, gating_net.fc_layers.1, gating_net.fc_layers.2, gating_net.fc_layers.3, gating_net.fc_layers.4, students.1, students.1.network, students.1.network.0, students.1.network.1, students.1.network.2, students.1.network.3, students.1.network.4, students.1.network.5, students.1.network.6, students.1.network.7, students.1.network.8, students.1.network.9, students.2, students.2.network, students.2.network.0, students.2.network.1, students.2.network.2, students.2.network.3, students.2.network.4, students.2.network.5, students.2.network.6, students.2.network.7, students.2.network.8, students.2.network.9
MoE Results:
Loss: 0.5256, Accuracy: 0.8496
Latency per Image: 0.000942 secs
FLOPs per Image: 0.35 MFLOPs