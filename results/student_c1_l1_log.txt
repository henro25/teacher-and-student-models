Distilling Teacher Knowledge into a Single Student:
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Distill Loss: 3.4196, Accuracy: 0.4490
Distill Loss: 2.2707, Accuracy: 0.5855
Distill Loss: 1.8842, Accuracy: 0.6365
Distill Loss: 1.6438, Accuracy: 0.6689
Distill Loss: 1.4975, Accuracy: 0.6924
Distill Loss: 1.3924, Accuracy: 0.7089
Distill Loss: 1.3078, Accuracy: 0.7176
Distill Loss: 1.2400, Accuracy: 0.7268
Distill Loss: 1.1838, Accuracy: 0.7357
Distill Loss: 1.1360, Accuracy: 0.7386
Distill Loss: 1.1039, Accuracy: 0.7466
Distill Loss: 1.0748, Accuracy: 0.7518
Distill Loss: 1.0356, Accuracy: 0.7551
Distill Loss: 1.0037, Accuracy: 0.7579
Distill Loss: 0.9841, Accuracy: 0.7670
Distill Loss: 0.9599, Accuracy: 0.7676
Distill Loss: 0.9501, Accuracy: 0.7695
Distill Loss: 0.9275, Accuracy: 0.7718
Distill Loss: 0.9155, Accuracy: 0.7741
Distill Loss: 0.8925, Accuracy: 0.7778

Student Results:
Loss: 0.6590, Accuracy: 0.7885
Latency per Image: 0.000954 secs
FLOPs per Image: 0.10 MFLOPs

Joint Training of Mixture of Experts (MoE):
<ipython-input-9-1e0c18485092>:753: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  student.load_state_dict(torch.load(single_student_save_path))
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Epoch 1/20 - MoE Loss: 0.6453, Accuracy: 0.7777
Epoch 2/20 - MoE Loss: 0.6222, Accuracy: 0.7858
Epoch 3/20 - MoE Loss: 0.5973, Accuracy: 0.7925
Epoch 4/20 - MoE Loss: 0.5800, Accuracy: 0.7993
Epoch 5/20 - MoE Loss: 0.5676, Accuracy: 0.8031
Epoch 6/20 - MoE Loss: 0.5445, Accuracy: 0.8123
Epoch 7/20 - MoE Loss: 0.5280, Accuracy: 0.8158
Epoch 8/20 - MoE Loss: 0.5055, Accuracy: 0.8239
Epoch 9/20 - MoE Loss: 0.4866, Accuracy: 0.8300
Epoch 10/20 - MoE Loss: 0.4680, Accuracy: 0.8378
Epoch 11/20 - MoE Loss: 0.4520, Accuracy: 0.8434
Epoch 12/20 - MoE Loss: 0.4391, Accuracy: 0.8485
Epoch 13/20 - MoE Loss: 0.4159, Accuracy: 0.8541
Epoch 14/20 - MoE Loss: 0.4030, Accuracy: 0.8595
Epoch 15/20 - MoE Loss: 0.3923, Accuracy: 0.8643
Epoch 16/20 - MoE Loss: 0.3792, Accuracy: 0.8679
Epoch 17/20 - MoE Loss: 0.3692, Accuracy: 0.8718
Epoch 18/20 - MoE Loss: 0.3619, Accuracy: 0.8740
Epoch 19/20 - MoE Loss: 0.3569, Accuracy: 0.8757
Epoch 20/20 - MoE Loss: 0.3561, Accuracy: 0.8761

Evaluating Mixture of Experts (MoE):
WARNING:fvcore.nn.jit_analysis:Unsupported operator aten::max_pool2d encountered 2 time(s)
WARNING:fvcore.nn.jit_analysis:The following submodules of the model were never called during the trace of the graph. They may be unused, or they were accessed by direct calls to .forward() or via other python methods. In the latter case they will have zeros for statistics, though their statistics will still contribute to their parent calling module.
gating_net, gating_net.conv_layers, gating_net.conv_layers.0, gating_net.conv_layers.1, gating_net.conv_layers.2, gating_net.conv_layers.3, gating_net.conv_layers.4, gating_net.conv_layers.5, gating_net.conv_layers.6, gating_net.conv_layers.7, gating_net.fc_layers, gating_net.fc_layers.0, gating_net.fc_layers.1, gating_net.fc_layers.2, gating_net.fc_layers.3, gating_net.fc_layers.4, students.1, students.1.network, students.1.network.0, students.1.network.1, students.1.network.2, students.1.network.3, students.1.network.4, students.1.network.5, students.1.network.6, students.1.network.7, students.1.network.8, students.1.network.9, students.2, students.2.network, students.2.network.0, students.2.network.1, students.2.network.2, students.2.network.3, students.2.network.4, students.2.network.5, students.2.network.6, students.2.network.7, students.2.network.8, students.2.network.9
MoE Results:
Loss: 0.5037, Accuracy: 0.8390
Latency per Image: 0.001118 secs
FLOPs per Image: 0.10 MFLOPs