Distilling Teacher Knowledge into a Single Student:
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Distill Loss: 3.9189, Accuracy: 0.3944
Distill Loss: 2.9180, Accuracy: 0.5114
Distill Loss: 2.4957, Accuracy: 0.5673
Distill Loss: 2.2672, Accuracy: 0.5919
Distill Loss: 2.0991, Accuracy: 0.6126
Distill Loss: 1.9815, Accuracy: 0.6291
Distill Loss: 1.8892, Accuracy: 0.6389
Distill Loss: 1.8198, Accuracy: 0.6482
Distill Loss: 1.7465, Accuracy: 0.6568
Distill Loss: 1.6967, Accuracy: 0.6661
Distill Loss: 1.6559, Accuracy: 0.6692
Distill Loss: 1.6161, Accuracy: 0.6735
Distill Loss: 1.5781, Accuracy: 0.6795
Distill Loss: 1.5541, Accuracy: 0.6825
Distill Loss: 1.5226, Accuracy: 0.6859
Distill Loss: 1.4979, Accuracy: 0.6863
Distill Loss: 1.4801, Accuracy: 0.6949
Distill Loss: 1.4550, Accuracy: 0.6976
Distill Loss: 1.4450, Accuracy: 0.6970
Distill Loss: 1.4205, Accuracy: 0.7003

Student Results:
Loss: 0.8301, Accuracy: 0.7268
Latency per Image: 0.000585 secs
FLOPs per Image: 0.09 MFLOPs

Joint Training of Mixture of Experts (MoE):
<ipython-input-3-eaf3c216c361>:753: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  student.load_state_dict(torch.load(single_student_save_path))
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Epoch 1/20 - MoE Loss: 0.8203, Accuracy: 0.7137
Epoch 2/20 - MoE Loss: 0.7832, Accuracy: 0.7258
Epoch 3/20 - MoE Loss: 0.7670, Accuracy: 0.7317
Epoch 4/20 - MoE Loss: 0.7491, Accuracy: 0.7374
Epoch 5/20 - MoE Loss: 0.7350, Accuracy: 0.7434
Epoch 6/20 - MoE Loss: 0.7166, Accuracy: 0.7506
Epoch 7/20 - MoE Loss: 0.6990, Accuracy: 0.7566
Epoch 8/20 - MoE Loss: 0.6848, Accuracy: 0.7617
Epoch 9/20 - MoE Loss: 0.6732, Accuracy: 0.7689
Epoch 10/20 - MoE Loss: 0.6558, Accuracy: 0.7728
Epoch 11/20 - MoE Loss: 0.6390, Accuracy: 0.7778
Epoch 12/20 - MoE Loss: 0.6350, Accuracy: 0.7793
Epoch 13/20 - MoE Loss: 0.6177, Accuracy: 0.7855
Epoch 14/20 - MoE Loss: 0.6013, Accuracy: 0.7880
Epoch 15/20 - MoE Loss: 0.5955, Accuracy: 0.7945
Epoch 16/20 - MoE Loss: 0.5860, Accuracy: 0.7955
Epoch 17/20 - MoE Loss: 0.5793, Accuracy: 0.8002
Epoch 18/20 - MoE Loss: 0.5719, Accuracy: 0.8006
Epoch 19/20 - MoE Loss: 0.5673, Accuracy: 0.8037
Epoch 20/20 - MoE Loss: 0.5629, Accuracy: 0.8021

Evaluating Mixture of Experts (MoE):
WARNING:fvcore.nn.jit_analysis:Unsupported operator aten::max_pool2d encountered 2 time(s)
WARNING:fvcore.nn.jit_analysis:The following submodules of the model were never called during the trace of the graph. They may be unused, or they were accessed by direct calls to .forward() or via other python methods. In the latter case they will have zeros for statistics, though their statistics will still contribute to their parent calling module.
gating_net, gating_net.conv_layers, gating_net.conv_layers.0, gating_net.conv_layers.1, gating_net.conv_layers.2, gating_net.conv_layers.3, gating_net.conv_layers.4, gating_net.conv_layers.5, gating_net.conv_layers.6, gating_net.conv_layers.7, gating_net.fc_layers, gating_net.fc_layers.0, gating_net.fc_layers.1, gating_net.fc_layers.2, gating_net.fc_layers.3, gating_net.fc_layers.4, students.1, students.1.network, students.1.network.0, students.1.network.1, students.1.network.2, students.1.network.3, students.1.network.4, students.1.network.5, students.1.network.6, students.1.network.7, students.1.network.8, students.1.network.9, students.2, students.2.network, students.2.network.0, students.2.network.1, students.2.network.2, students.2.network.3, students.2.network.4, students.2.network.5, students.2.network.6, students.2.network.7, students.2.network.8, students.2.network.9
MoE Results:
Loss: 0.5959, Accuracy: 0.8011
Latency per Image: 0.001505 secs
FLOPs per Image: 0.09 MFLOPs