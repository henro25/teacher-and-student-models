Distilling Teacher Knowledge into a Single Student:
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Distill Loss: 3.3886, Accuracy: 0.4509
Distill Loss: 2.2405, Accuracy: 0.5891
Distill Loss: 1.8354, Accuracy: 0.6436
Distill Loss: 1.6106, Accuracy: 0.6749
Distill Loss: 1.4493, Accuracy: 0.6980
Distill Loss: 1.3323, Accuracy: 0.7124
Distill Loss: 1.2467, Accuracy: 0.7245
Distill Loss: 1.1744, Accuracy: 0.7372
Distill Loss: 1.1150, Accuracy: 0.7443
Distill Loss: 1.0710, Accuracy: 0.7540
Distill Loss: 1.0272, Accuracy: 0.7616
Distill Loss: 0.9987, Accuracy: 0.7633
Distill Loss: 0.9649, Accuracy: 0.7690
Distill Loss: 0.9416, Accuracy: 0.7736
Distill Loss: 0.9118, Accuracy: 0.7781
Distill Loss: 0.8943, Accuracy: 0.7805
Distill Loss: 0.8731, Accuracy: 0.7845
Distill Loss: 0.8575, Accuracy: 0.7872
Distill Loss: 0.8391, Accuracy: 0.7898
Distill Loss: 0.8306, Accuracy: 0.7901

Student Results:
Loss: 0.6167, Accuracy: 0.8012
Latency per Image: 0.000548 secs
FLOPs per Image: 0.12 MFLOPs

Joint Training of Mixture of Experts (MoE):
<ipython-input-3-c3ccf2f8d4b3>:753: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  student.load_state_dict(torch.load(single_student_save_path))
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Epoch 1/20 - MoE Loss: 0.6162, Accuracy: 0.7882
Epoch 2/20 - MoE Loss: 0.5823, Accuracy: 0.7989
Epoch 3/20 - MoE Loss: 0.5575, Accuracy: 0.8092
Epoch 4/20 - MoE Loss: 0.5468, Accuracy: 0.8095
Epoch 5/20 - MoE Loss: 0.5223, Accuracy: 0.8216
Epoch 6/20 - MoE Loss: 0.5105, Accuracy: 0.8239
Epoch 7/20 - MoE Loss: 0.4825, Accuracy: 0.8332
Epoch 8/20 - MoE Loss: 0.4667, Accuracy: 0.8397
Epoch 9/20 - MoE Loss: 0.4440, Accuracy: 0.8484
Epoch 10/20 - MoE Loss: 0.4272, Accuracy: 0.8526
Epoch 11/20 - MoE Loss: 0.4096, Accuracy: 0.8599
Epoch 12/20 - MoE Loss: 0.3923, Accuracy: 0.8653
Epoch 13/20 - MoE Loss: 0.3740, Accuracy: 0.8688
Epoch 14/20 - MoE Loss: 0.3541, Accuracy: 0.8784
Epoch 15/20 - MoE Loss: 0.3435, Accuracy: 0.8804
Epoch 16/20 - MoE Loss: 0.3294, Accuracy: 0.8865
Epoch 17/20 - MoE Loss: 0.3195, Accuracy: 0.8890
Epoch 18/20 - MoE Loss: 0.3102, Accuracy: 0.8921
Epoch 19/20 - MoE Loss: 0.3074, Accuracy: 0.8934
Epoch 20/20 - MoE Loss: 0.2999, Accuracy: 0.8966

Evaluating Mixture of Experts (MoE):
WARNING:fvcore.nn.jit_analysis:Unsupported operator aten::max_pool2d encountered 2 time(s)
WARNING:fvcore.nn.jit_analysis:The following submodules of the model were never called during the trace of the graph. They may be unused, or they were accessed by direct calls to .forward() or via other python methods. In the latter case they will have zeros for statistics, though their statistics will still contribute to their parent calling module.
gating_net, gating_net.conv_layers, gating_net.conv_layers.0, gating_net.conv_layers.1, gating_net.conv_layers.2, gating_net.conv_layers.3, gating_net.conv_layers.4, gating_net.conv_layers.5, gating_net.conv_layers.6, gating_net.conv_layers.7, gating_net.fc_layers, gating_net.fc_layers.0, gating_net.fc_layers.1, gating_net.fc_layers.2, gating_net.fc_layers.3, gating_net.fc_layers.4, students.1, students.1.network, students.1.network.0, students.1.network.1, students.1.network.2, students.1.network.3, students.1.network.4, students.1.network.5, students.1.network.6, students.1.network.7, students.1.network.8, students.1.network.9, students.2, students.2.network, students.2.network.0, students.2.network.1, students.2.network.2, students.2.network.3, students.2.network.4, students.2.network.5, students.2.network.6, students.2.network.7, students.2.network.8, students.2.network.9
MoE Results:
Loss: 0.5090, Accuracy: 0.8445
Latency per Image: 0.000965 secs
FLOPs per Image: 0.12 MFLOPs