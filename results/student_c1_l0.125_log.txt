Distilling Teacher Knowledge into a Single Student:
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Distill Loss: 3.8108, Accuracy: 0.4007
Distill Loss: 2.6718, Accuracy: 0.5359
Distill Loss: 2.2880, Accuracy: 0.5835
Distill Loss: 2.0842, Accuracy: 0.6102
Distill Loss: 1.9299, Accuracy: 0.6299
Distill Loss: 1.7954, Accuracy: 0.6467
Distill Loss: 1.7220, Accuracy: 0.6560
Distill Loss: 1.6537, Accuracy: 0.6676
Distill Loss: 1.5816, Accuracy: 0.6756
Distill Loss: 1.5272, Accuracy: 0.6836
Distill Loss: 1.4810, Accuracy: 0.6887
Distill Loss: 1.4532, Accuracy: 0.6940
Distill Loss: 1.4217, Accuracy: 0.6980
Distill Loss: 1.3869, Accuracy: 0.7021
Distill Loss: 1.3548, Accuracy: 0.7045
Distill Loss: 1.3418, Accuracy: 0.7062
Distill Loss: 1.3217, Accuracy: 0.7123
Distill Loss: 1.2969, Accuracy: 0.7148
Distill Loss: 1.2831, Accuracy: 0.7195
Distill Loss: 1.2672, Accuracy: 0.7236

Student Results:
Loss: 0.8131, Accuracy: 0.7469
Latency per Image: 0.000380 secs
FLOPs per Image: 0.09 MFLOPs

Joint Training of Mixture of Experts (MoE):
<ipython-input-3-dbab82ff069f>:753: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  student.load_state_dict(torch.load(single_student_save_path))
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Epoch 1/20 - MoE Loss: 0.7981, Accuracy: 0.7248
Epoch 2/20 - MoE Loss: 0.7647, Accuracy: 0.7368
Epoch 3/20 - MoE Loss: 0.7451, Accuracy: 0.7431
Epoch 4/20 - MoE Loss: 0.7279, Accuracy: 0.7497
Epoch 5/20 - MoE Loss: 0.7155, Accuracy: 0.7545
Epoch 6/20 - MoE Loss: 0.7009, Accuracy: 0.7574
Epoch 7/20 - MoE Loss: 0.6933, Accuracy: 0.7615
Epoch 8/20 - MoE Loss: 0.6738, Accuracy: 0.7650
Epoch 9/20 - MoE Loss: 0.6546, Accuracy: 0.7741
Epoch 10/20 - MoE Loss: 0.6474, Accuracy: 0.7756
Epoch 11/20 - MoE Loss: 0.6288, Accuracy: 0.7810
Epoch 12/20 - MoE Loss: 0.6194, Accuracy: 0.7852
Epoch 13/20 - MoE Loss: 0.6101, Accuracy: 0.7867
Epoch 14/20 - MoE Loss: 0.5928, Accuracy: 0.7947
Epoch 15/20 - MoE Loss: 0.5849, Accuracy: 0.7959
Epoch 16/20 - MoE Loss: 0.5777, Accuracy: 0.7991
Epoch 17/20 - MoE Loss: 0.5662, Accuracy: 0.8038
Epoch 18/20 - MoE Loss: 0.5554, Accuracy: 0.8076
Epoch 19/20 - MoE Loss: 0.5566, Accuracy: 0.8074
Epoch 20/20 - MoE Loss: 0.5552, Accuracy: 0.8075

Evaluating Mixture of Experts (MoE):
WARNING:fvcore.nn.jit_analysis:Unsupported operator aten::max_pool2d encountered 2 time(s)
WARNING:fvcore.nn.jit_analysis:The following submodules of the model were never called during the trace of the graph. They may be unused, or they were accessed by direct calls to .forward() or via other python methods. In the latter case they will have zeros for statistics, though their statistics will still contribute to their parent calling module.
gating_net, gating_net.conv_layers, gating_net.conv_layers.0, gating_net.conv_layers.1, gating_net.conv_layers.2, gating_net.conv_layers.3, gating_net.conv_layers.4, gating_net.conv_layers.5, gating_net.conv_layers.6, gating_net.conv_layers.7, gating_net.fc_layers, gating_net.fc_layers.0, gating_net.fc_layers.1, gating_net.fc_layers.2, gating_net.fc_layers.3, gating_net.fc_layers.4, students.1, students.1.network, students.1.network.0, students.1.network.1, students.1.network.2, students.1.network.3, students.1.network.4, students.1.network.5, students.1.network.6, students.1.network.7, students.1.network.8, students.1.network.9, students.2, students.2.network, students.2.network.0, students.2.network.1, students.2.network.2, students.2.network.3, students.2.network.4, students.2.network.5, students.2.network.6, students.2.network.7, students.2.network.8, students.2.network.9
MoE Results:
Loss: 0.5895, Accuracy: 0.8030
Latency per Image: 0.001734 secs
FLOPs per Image: 0.09 MFLOPs
