Distilling Teacher Knowledge into a Single Student:
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Distill Loss: 3.1672, Accuracy: 0.4757
Distill Loss: 1.9480, Accuracy: 0.6284
Distill Loss: 1.5702, Accuracy: 0.6821
Distill Loss: 1.3474, Accuracy: 0.7108
Distill Loss: 1.2232, Accuracy: 0.7320
Distill Loss: 1.1088, Accuracy: 0.7492
Distill Loss: 1.0444, Accuracy: 0.7578
Distill Loss: 0.9877, Accuracy: 0.7673
Distill Loss: 0.9304, Accuracy: 0.7758
Distill Loss: 0.8979, Accuracy: 0.7803
Distill Loss: 0.8634, Accuracy: 0.7888
Distill Loss: 0.8336, Accuracy: 0.7908
Distill Loss: 0.8081, Accuracy: 0.7968
Distill Loss: 0.7940, Accuracy: 0.8001
Distill Loss: 0.7669, Accuracy: 0.8022
Distill Loss: 0.7482, Accuracy: 0.8076
Distill Loss: 0.7360, Accuracy: 0.8090
Distill Loss: 0.7235, Accuracy: 0.8120
Distill Loss: 0.7067, Accuracy: 0.8137
Distill Loss: 0.6971, Accuracy: 0.8170
Single Student saved to student_c1_l4.pth

Evaluating the Single Student:
WARNING:fvcore.nn.jit_analysis:Unsupported operator aten::max_pool2d encountered 2 time(s)
Single Student Results:
Loss: 0.5725, Accuracy: 0.8097
Latency per Image: 0.002241 secs
FLOPs per Image: 0.45 MFLOPs

Duplicating the Single Student:
<ipython-input-3-21e07830e189>:753: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  student.load_state_dict(torch.load(single_student_save_path))
3 Students initialized by duplicating the Single Student model.

Joint Training of Mixture of Experts (MoE):
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Epoch 1/20 - MoE Loss: 0.5520, Accuracy: 0.8119
Epoch 2/20 - MoE Loss: 0.5248, Accuracy: 0.8229
Epoch 3/20 - MoE Loss: 0.5009, Accuracy: 0.8269
Epoch 4/20 - MoE Loss: 0.4777, Accuracy: 0.8356
Epoch 5/20 - MoE Loss: 0.4635, Accuracy: 0.8419
Epoch 6/20 - MoE Loss: 0.4475, Accuracy: 0.8485
Epoch 7/20 - MoE Loss: 0.4150, Accuracy: 0.8588
Epoch 8/20 - MoE Loss: 0.3987, Accuracy: 0.8640
Epoch 9/20 - MoE Loss: 0.3717, Accuracy: 0.8724
Epoch 10/20 - MoE Loss: 0.3482, Accuracy: 0.8794
Epoch 11/20 - MoE Loss: 0.3278, Accuracy: 0.8877
Epoch 12/20 - MoE Loss: 0.3065, Accuracy: 0.8954
Epoch 13/20 - MoE Loss: 0.2874, Accuracy: 0.9007
Epoch 14/20 - MoE Loss: 0.2661, Accuracy: 0.9089
Epoch 15/20 - MoE Loss: 0.2492, Accuracy: 0.9149
Epoch 16/20 - MoE Loss: 0.2359, Accuracy: 0.9200
Epoch 17/20 - MoE Loss: 0.2259, Accuracy: 0.9236
Epoch 18/20 - MoE Loss: 0.2158, Accuracy: 0.9258
Epoch 19/20 - MoE Loss: 0.2077, Accuracy: 0.9280
Epoch 20/20 - MoE Loss: 0.2121, Accuracy: 0.9280

Evaluating Mixture of Experts (MoE):
WARNING:fvcore.nn.jit_analysis:Unsupported operator aten::max_pool2d encountered 2 time(s)
WARNING:fvcore.nn.jit_analysis:The following submodules of the model were never called during the trace of the graph. They may be unused, or they were accessed by direct calls to .forward() or via other python methods. In the latter case they will have zeros for statistics, though their statistics will still contribute to their parent calling module.
gating_net, gating_net.conv_layers, gating_net.conv_layers.0, gating_net.conv_layers.1, gating_net.conv_layers.2, gating_net.conv_layers.3, gating_net.conv_layers.4, gating_net.conv_layers.5, gating_net.conv_layers.6, gating_net.conv_layers.7, gating_net.fc_layers, gating_net.fc_layers.0, gating_net.fc_layers.1, gating_net.fc_layers.2, gating_net.fc_layers.3, gating_net.fc_layers.4, students.1, students.1.network, students.1.network.0, students.1.network.1, students.1.network.2, students.1.network.3, students.1.network.4, students.1.network.5, students.1.network.6, students.1.network.7, students.1.network.8, students.1.network.9, students.2, students.2.network, students.2.network.0, students.2.network.1, students.2.network.2, students.2.network.3, students.2.network.4, students.2.network.5, students.2.network.6, students.2.network.7, students.2.network.8, students.2.network.9
MoE Results:
Loss: 0.4845, Accuracy: 0.8587
Latency per Image: 0.001127 secs
FLOPs per Image: 0.45 MFLOPs
