Distilling Teacher Knowledge into a Single Student:
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Distill Loss: 3.3057, Accuracy: 0.4639
Distill Loss: 2.0361, Accuracy: 0.6175
Distill Loss: 1.6188, Accuracy: 0.6742
Distill Loss: 1.3993, Accuracy: 0.7047
Distill Loss: 1.2386, Accuracy: 0.7316
Distill Loss: 1.1325, Accuracy: 0.7445
Distill Loss: 1.0432, Accuracy: 0.7586
Distill Loss: 0.9900, Accuracy: 0.7698
Distill Loss: 0.9341, Accuracy: 0.7750
Distill Loss: 0.8994, Accuracy: 0.7844
Distill Loss: 0.8622, Accuracy: 0.7912
Distill Loss: 0.8317, Accuracy: 0.7971
Distill Loss: 0.8058, Accuracy: 0.8026
Distill Loss: 0.7804, Accuracy: 0.8045
Distill Loss: 0.7659, Accuracy: 0.8076
Distill Loss: 0.7475, Accuracy: 0.8122
Distill Loss: 0.7351, Accuracy: 0.8128
Distill Loss: 0.7224, Accuracy: 0.8162
Distill Loss: 0.7050, Accuracy: 0.8202
Distill Loss: 0.6980, Accuracy: 0.8225
Single Student saved to student_c1_l64.pth

Evaluating the Single Student:
WARNING:fvcore.nn.jit_analysis:Unsupported operator aten::max_pool2d encountered 2 time(s)
Single Student Results:
Loss: 0.5652, Accuracy: 0.8189
Latency per Image: 0.001822 secs
FLOPs per Image: 1.14 MFLOPs

Duplicating the Single Student:
<ipython-input-3-87a02d44d922>:753: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  student.load_state_dict(torch.load(single_student_save_path))
3 Students initialized by duplicating the Single Student model.

Joint Training of Mixture of Experts (MoE):
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Epoch 1/20 - MoE Loss: 0.5371, Accuracy: 0.8170
Epoch 2/20 - MoE Loss: 0.5140, Accuracy: 0.8249
Epoch 3/20 - MoE Loss: 0.4760, Accuracy: 0.8397
Epoch 4/20 - MoE Loss: 0.4630, Accuracy: 0.8433
Epoch 5/20 - MoE Loss: 0.4368, Accuracy: 0.8517
Epoch 6/20 - MoE Loss: 0.4110, Accuracy: 0.8599
Epoch 7/20 - MoE Loss: 0.3899, Accuracy: 0.8678
Epoch 8/20 - MoE Loss: 0.3635, Accuracy: 0.8770
Epoch 9/20 - MoE Loss: 0.3374, Accuracy: 0.8850
Epoch 10/20 - MoE Loss: 0.3116, Accuracy: 0.8949
Epoch 11/20 - MoE Loss: 0.2882, Accuracy: 0.9023
Epoch 12/20 - MoE Loss: 0.2606, Accuracy: 0.9110
Epoch 13/20 - MoE Loss: 0.2430, Accuracy: 0.9187
Epoch 14/20 - MoE Loss: 0.2249, Accuracy: 0.9241
Epoch 15/20 - MoE Loss: 0.2053, Accuracy: 0.9314
Epoch 16/20 - MoE Loss: 0.1932, Accuracy: 0.9352
Epoch 17/20 - MoE Loss: 0.1836, Accuracy: 0.9390
Epoch 18/20 - MoE Loss: 0.1709, Accuracy: 0.9433
Epoch 19/20 - MoE Loss: 0.1682, Accuracy: 0.9461
Epoch 20/20 - MoE Loss: 0.1645, Accuracy: 0.9451

Evaluating Mixture of Experts (MoE):
WARNING:fvcore.nn.jit_analysis:Unsupported operator aten::max_pool2d encountered 2 time(s)
WARNING:fvcore.nn.jit_analysis:The following submodules of the model were never called during the trace of the graph. They may be unused, or they were accessed by direct calls to .forward() or via other python methods. In the latter case they will have zeros for statistics, though their statistics will still contribute to their parent calling module.
gating_net, gating_net.conv_layers, gating_net.conv_layers.0, gating_net.conv_layers.1, gating_net.conv_layers.2, gating_net.conv_layers.3, gating_net.conv_layers.4, gating_net.conv_layers.5, gating_net.conv_layers.6, gating_net.conv_layers.7, gating_net.fc_layers, gating_net.fc_layers.0, gating_net.fc_layers.1, gating_net.fc_layers.2, gating_net.fc_layers.3, gating_net.fc_layers.4, students.1, students.1.network, students.1.network.0, students.1.network.1, students.1.network.2, students.1.network.3, students.1.network.4, students.1.network.5, students.1.network.6, students.1.network.7, students.1.network.8, students.1.network.9, students.2, students.2.network, students.2.network.0, students.2.network.1, students.2.network.2, students.2.network.3, students.2.network.4, students.2.network.5, students.2.network.6, students.2.network.7, students.2.network.8, students.2.network.9
MoE Results:
Loss: 0.5184, Accuracy: 0.8523
Latency per Image: 0.001246 secs
FLOPs per Image: 1.14 MFLOPs
