Distilling Teacher Knowledge into a Single Student:
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Distill Loss: 5.6717, Accuracy: 0.1881
Distill Loss: 4.7849, Accuracy: 0.2749
Distill Loss: 4.3731, Accuracy: 0.2972
Distill Loss: 4.1226, Accuracy: 0.3088
Distill Loss: 3.9386, Accuracy: 0.3304
Distill Loss: 3.7523, Accuracy: 0.3678
Distill Loss: 3.5778, Accuracy: 0.3758
Distill Loss: 3.4665, Accuracy: 0.3814
Distill Loss: 3.3778, Accuracy: 0.3832
Distill Loss: 3.3222, Accuracy: 0.3875
Distill Loss: 3.2617, Accuracy: 0.3873
Distill Loss: 3.2330, Accuracy: 0.3906
Distill Loss: 3.2031, Accuracy: 0.3929
Distill Loss: 3.1583, Accuracy: 0.3958
Distill Loss: 3.1389, Accuracy: 0.3985
Distill Loss: 3.1154, Accuracy: 0.3992
Distill Loss: 3.0982, Accuracy: 0.4002
Distill Loss: 3.0629, Accuracy: 0.4045
Distill Loss: 3.0509, Accuracy: 0.4048
Distill Loss: 3.0398, Accuracy: 0.4096
Single Student saved to student_c1_l0.015625.pth

Evaluating the Single Student:
WARNING:fvcore.nn.jit_analysis:Unsupported operator aten::max_pool2d encountered 2 time(s)
Single Student Results:
Loss: 1.4070, Accuracy: 0.4000
Latency per Image: 0.002102 secs
FLOPs per Image: 0.09 MFLOPs

Duplicating the Single Student:
3 Students initialized by duplicating the Single Student model.

Joint Training of Mixture of Experts (MoE):
<ipython-input-3-eac367d8e10a>:753: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  student.load_state_dict(torch.load(single_student_save_path))
/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Epoch 1/20 - MoE Loss: 1.2699, Accuracy: 0.5115
Epoch 2/20 - MoE Loss: 1.1914, Accuracy: 0.5608
Epoch 3/20 - MoE Loss: 1.1551, Accuracy: 0.5737
Epoch 4/20 - MoE Loss: 1.1329, Accuracy: 0.5837
Epoch 5/20 - MoE Loss: 1.1150, Accuracy: 0.5939
Epoch 6/20 - MoE Loss: 1.0981, Accuracy: 0.5981
Epoch 7/20 - MoE Loss: 1.0844, Accuracy: 0.6075
Epoch 8/20 - MoE Loss: 1.0707, Accuracy: 0.6114
Epoch 9/20 - MoE Loss: 1.0564, Accuracy: 0.6177
Epoch 10/20 - MoE Loss: 1.0376, Accuracy: 0.6232
Epoch 11/20 - MoE Loss: 1.0277, Accuracy: 0.6269
Epoch 12/20 - MoE Loss: 1.0186, Accuracy: 0.6326
Epoch 13/20 - MoE Loss: 1.0052, Accuracy: 0.6366
Epoch 14/20 - MoE Loss: 0.9942, Accuracy: 0.6418
Epoch 15/20 - MoE Loss: 0.9868, Accuracy: 0.6445
Epoch 16/20 - MoE Loss: 0.9768, Accuracy: 0.6491
Epoch 17/20 - MoE Loss: 0.9741, Accuracy: 0.6478
Epoch 18/20 - MoE Loss: 0.9589, Accuracy: 0.6542
Epoch 19/20 - MoE Loss: 0.9628, Accuracy: 0.6507
Epoch 20/20 - MoE Loss: 0.9618, Accuracy: 0.6529

Evaluating Mixture of Experts (MoE):
WARNING:fvcore.nn.jit_analysis:Unsupported operator aten::max_pool2d encountered 2 time(s)
WARNING:fvcore.nn.jit_analysis:The following submodules of the model were never called during the trace of the graph. They may be unused, or they were accessed by direct calls to .forward() or via other python methods. In the latter case they will have zeros for statistics, though their statistics will still contribute to their parent calling module.
gating_net, gating_net.conv_layers, gating_net.conv_layers.0, gating_net.conv_layers.1, gating_net.conv_layers.2, gating_net.conv_layers.3, gating_net.conv_layers.4, gating_net.conv_layers.5, gating_net.conv_layers.6, gating_net.conv_layers.7, gating_net.fc_layers, gating_net.fc_layers.0, gating_net.fc_layers.1, gating_net.fc_layers.2, gating_net.fc_layers.3, gating_net.fc_layers.4, students.1, students.1.network, students.1.network.0, students.1.network.1, students.1.network.2, students.1.network.3, students.1.network.4, students.1.network.5, students.1.network.6, students.1.network.7, students.1.network.8, students.1.network.9, students.2, students.2.network, students.2.network.0, students.2.network.1, students.2.network.2, students.2.network.3, students.2.network.4, students.2.network.5, students.2.network.6, students.2.network.7, students.2.network.8, students.2.network.9
MoE Results:
Loss: 0.9881, Accuracy: 0.6464
Latency per Image: 0.001433 secs
FLOPs per Image: 0.09 MFLOPs
